/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ctascontablesypolizas;

import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Gabriel
 */
public class DocumentosPoliza extends javax.swing.JDialog {

    Connection conexion;
    ListadoPolizas padre;
    String iPDef;
    String rutaDef;
    String[] cveDocs;
    private javax.swing.table.DefaultTableModel modelo;
    String tipoP;

    /**
     * Creates new form DocumentosPoliza
     */
    public DocumentosPoliza(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jBtnExportarAExcel = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jBtnSalir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblPartidasOrd = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Documentos incluidos en la p칩liza");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setBackground(new java.awt.Color(178, 233, 187));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jBtnExportarAExcel.setBackground(new java.awt.Color(178, 233, 187));
        jBtnExportarAExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exportar.png"))); // NOI18N
        jBtnExportarAExcel.setToolTipText("Exportar a MS Excel");
        jBtnExportarAExcel.setEnabled(false);
        jBtnExportarAExcel.setFocusable(false);
        jBtnExportarAExcel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnExportarAExcel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnExportarAExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExportarAExcelActionPerformed(evt);
            }
        });
        jToolBar1.add(jBtnExportarAExcel);
        jToolBar1.add(jSeparator2);

        jBtnSalir.setBackground(new java.awt.Color(178, 233, 187));
        jBtnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.png"))); // NOI18N
        jBtnSalir.setToolTipText("Salir");
        jBtnSalir.setFocusable(false);
        jBtnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalirActionPerformed(evt);
            }
        });
        jToolBar1.add(jBtnSalir);

        jTblPartidasOrd.setBackground(new java.awt.Color(178, 233, 187));
        jTblPartidasOrd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave del docto.", "Cve. Cliente", "Fecha Docto.", "Cantidadt total", "Impuestos", "Subtotal de docto."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblPartidasOrd.setToolTipText("Documentos de la p칩liza");
        jScrollPane2.setViewportView(jTblPartidasOrd);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void configurarTabla() {
        try {
            modelo = new javax.swing.table.DefaultTableModel() {
                public boolean isCellEditable(int fila, int col) {
                    return false;
                }
                Class[] tipos = new Class[]{String.class, String.class, String.class, String.class, String.class, String.class, String.class};

                public Class getColumnClass(int col) {
                    return tipos[col];
                }
            };
            modelo.addColumn("Clave Docto.");
            modelo.addColumn("Cve. Cliente");
            modelo.addColumn("Fecha Docto.");
            modelo.addColumn("Cantidad total");
            modelo.addColumn("Impuestos");
            modelo.addColumn("Subtotal docto.");
            modelo.addColumn("Total");
            jTblPartidasOrd.setModel(modelo);

            //Reordenador por columna
            jTblPartidasOrd.setRowSorter(new javax.swing.table.TableRowSorter(modelo));

            //Asignar tama침os de columna

            jTblPartidasOrd.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTblPartidasOrd.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTblPartidasOrd.getColumnModel().getColumn(2).setPreferredWidth(60);
            jTblPartidasOrd.getColumnModel().getColumn(3).setPreferredWidth(60);
            jTblPartidasOrd.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTblPartidasOrd.getColumnModel().getColumn(5).setPreferredWidth(70);
            jTblPartidasOrd.getColumnModel().getColumn(6).setPreferredWidth(70);
            //Selecci칩n sencilla
            jTblPartidasOrd.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

            //No permitir mover las columnas
            jTblPartidasOrd.getTableHeader().setReorderingAllowed(false);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void setOcultarColumnasJTable(JTable tbl, int columna) {
        try {
            tbl.getColumnModel().getColumn(columna).setMaxWidth(0);
            tbl.getColumnModel().getColumn(columna).setMinWidth(0);
            tbl.getColumnModel().getColumn(columna).setResizable(false);
            tbl.getTableHeader().getColumnModel().getColumn(columna).setMaxWidth(0);
            tbl.getTableHeader().getColumnModel().getColumn(columna).setMinWidth(0);
            tbl.getTableHeader().getColumnModel().getColumn(columna).setResizable(false);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void llenarTabla() {
        try {
//            conexion = Conexion.getConexionSAE(iPDef.trim() + "/3050:" + rutaDef.replace("\\", "/"));
            DatabaseMetaData metaDatos;
            String tipos[] = new String[]{"TABLE", "VIEW"};
            ResultSet rsTablas;
            metaDatos = conexion.getMetaData();
            rsTablas = metaDatos.getTables(null, "ESQUEMA", "%", tipos);
            String sufijoTabla = "";
            if (rsTablas.next()) {
                String nombreTabla = rsTablas.getString(rsTablas.findColumn("TABLE_NAME"));
                sufijoTabla = nombreTabla.substring(nombreTabla.length() - 2);
            }
            rsTablas.close();
            Statement st = conexion.createStatement();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            DecimalFormat decimalFormatPrecios = new DecimalFormat("###,##0.000");
            DecimalFormat decimalFormatCant = new DecimalFormat("###,##0.00");
            String tblAConsultar = "";
            String aliasTblAConsultar = "";
            if (tipoP.equalsIgnoreCase("Ventas") || tipoP.equalsIgnoreCase("Devolucion de Ventas")) {
                if (tipoP.equalsIgnoreCase("Ventas")) {
                    tblAConsultar = "factf";
                    aliasTblAConsultar = "factura";
                } else if (tipoP.equalsIgnoreCase("Devolucion de Ventas")) {//Devolucion por Ventas
                    tblAConsultar = "factd";
                    aliasTblAConsultar = "factura";
                }
            } else if (tipoP.equalsIgnoreCase("Compras") || tipoP.equalsIgnoreCase("Devolucion de Compras")) {//compras
                if (tipoP.equalsIgnoreCase("Compras")) {//compras
                    tblAConsultar = "compc";
                    aliasTblAConsultar = "compra";
                }else if (tipoP.equalsIgnoreCase("Devolucion de Compras")){//Devolucion de Compras
                    tblAConsultar = "compd";
                    aliasTblAConsultar = "compra";
                }
                JTableHeader th = jTblPartidasOrd.getTableHeader();//obtenemos el encabezado de la tabla
                TableColumnModel tcm = th.getColumnModel();//obtenemos el modelo de la columna del encabezado de la tabla
                TableColumn CPU = tcm.getColumn(1);//obtenemos las columnas especificas
                CPU.setHeaderValue("Cve. Proveedor");//cambiamos la etiqueta de cliente por proveedor
                th.repaint();
                setOcultarColumnasJTable(jTblPartidasOrd, 3);
            }

            for (int i = 0; i < cveDocs.length; i++) {
                ResultSet rsDoctos = st.executeQuery("select " + aliasTblAConsultar + ".cve_doc,"
                        + aliasTblAConsultar + ".cve_clpv,"
                        + "" + aliasTblAConsultar + ".fecha_doc,"
                        + "" + aliasTblAConsultar + ".can_tot,"
                        + "" + aliasTblAConsultar + ".imp_tot4,"
                        + "(" + aliasTblAConsultar + ".CAN_TOT - " + aliasTblAConsultar + ".DES_TOT) as subtotal,"
                        + "" + aliasTblAConsultar + ".importe "
                        + "from " + tblAConsultar + "" + sufijoTabla + " " + aliasTblAConsultar + ""
                        + " where " + aliasTblAConsultar + ".cve_doc='" + cveDocs[i].toString().replace("'", "''") + "'");
                if (rsDoctos.next()) {
                    String stFecha2 = sdf.format(rsDoctos.getTimestamp(3));
                    String cantTotal = decimalFormatCant.format(rsDoctos.getDouble(4));
                    String impuesto = decimalFormatPrecios.format(rsDoctos.getBigDecimal(5));
                    String subtotal = decimalFormatPrecios.format(rsDoctos.getBigDecimal(6));
                    String total = decimalFormatPrecios.format(rsDoctos.getBigDecimal(7));
                    modelo.addRow(new Object[]{rsDoctos.getString(1), rsDoctos.getString(2), stFecha2,
                        cantTotal, "$ " + impuesto, "$ " + subtotal, "$ " + total});
                }
                rsDoctos.close();
            }

            conexion.close();
            jBtnExportarAExcel.setEnabled(true);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al mostrar los registros" + e);
        }
    }
    private void jBtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalirActionPerformed
        // TODO add your handling code here:
        try {
            this.dispose();
            padre.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jBtnSalirActionPerformed

    private void jBtnExportarAExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExportarAExcelActionPerformed
        // TODO add your handling code here:
        try {
            List<JTable> tb = new ArrayList<JTable>();
            //***************NOMBRE DE LA HOJA*************************/
            List<String> nom = new ArrayList<String>();
            tb.add(jTblPartidasOrd);
            //-------------------------
            nom.add("ReporteDoctosEnPoliza.");
            //-------------------

//            aspelsaecoi.exportar_excel excelExporter = new aspelsaecoi.exportar_excel(tb, new File("ReporteDoctosEnPoliza.xls"), nom);
//            if (excelExporter.export()) {
//                JOptionPane.showMessageDialog(null, "DATOS EXPORTADOS CON EXITO!");
//            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        llama();
    }//GEN-LAST:event_jBtnExportarAExcelActionPerformed
    public void llama() {
        try {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "ReporteDoctosEnPoliza.xls");
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Cierre el archivo para continuar " + e);
        }
    }
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            this.dispose();
            padre.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setLocationRelativeTo(null);
        configurarTabla();
        llenarTabla();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DocumentosPoliza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DocumentosPoliza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DocumentosPoliza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DocumentosPoliza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DocumentosPoliza dialog = new DocumentosPoliza(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnExportarAExcel;
    private javax.swing.JButton jBtnSalir;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator2;
    protected javax.swing.JTable jTblPartidasOrd;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
