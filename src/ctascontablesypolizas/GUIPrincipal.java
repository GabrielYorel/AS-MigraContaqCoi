package ctascontablesypolizas;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import ctascontablesypolizas.clases.CrearConexionFBoSQL;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author Gabriel-Diaz
 */
public class GUIPrincipal extends javax.swing.JFrame {

    public boolean banderaReportes = false;
    private Connection conexionContpaqi;
    private CrearConexionFBoSQL objConexion;
    private String controladorCont;
    private String RutaonombreBDCont;
    private String servidorCont;
    private String usuarioCont;
    private String contraseniaCont;
    private int puertoCont;
    private String tipoCCont;
    private String puertoCOI;
    private String contraseniaCOI;
    private String usuarioCOI;
    private String tipoCCOI;
    private String servidorCOI;
    private String RutaonombreBDCOI;
    private String controladorCOI;
    private String noEmp;
    private Connection conexionCOI;
    private int opc1;
    private int opc2;
    private boolean banderaCOI;
    private boolean banderaCont;
    private int[] dxNiveles;
    private boolean seguridadIntegrada;

    /**
     * Creates new form GUIPrincipal
     */
    public GUIPrincipal() {
        initComponents();
        AsignarIconos();

        KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(new KeyEventDispatcher() {
            @Override
            public boolean dispatchKeyEvent(KeyEvent ke) {
                if (ke.getID() == java.awt.event.KeyEvent.KEY_TYPED && ke.getKeyCode() == java.awt.event.KeyEvent.VK_F1) {
                    abrirAyuda();
                }
                return false;
            }
        });
        jLabel1.setVisible(false);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jbtnImportarCtaCuentas = new javax.swing.JButton();
        jbtnImportarPoliza = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jBtnSalir = new javax.swing.JButton();
        jDPPrincipal1 = new javax.swing.JDesktopPane();
        jLblLogo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMIConfParams = new javax.swing.JMenuItem();
        jMISalir = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMIReporte = new javax.swing.JMenuItem();
        jMIPolizas = new javax.swing.JMenuItem();
        jMIImportarSaldos = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("****ASCIENDE COMPUTACIÓN, S.A. DE C.V. *** Migrar catalogo de cuentas y pólizas de CONTPAQ i® a ASPEL® COI 6.0");
        setMinimumSize(new java.awt.Dimension(744, 550));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });

        jToolBar1.setBackground(new java.awt.Color(178, 233, 187));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jbtnImportarCtaCuentas.setBackground(new java.awt.Color(178, 233, 187));
        jbtnImportarCtaCuentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ctascontcoi.png"))); // NOI18N
        jbtnImportarCtaCuentas.setToolTipText("Exportar catalogo de ctas.");
        jbtnImportarCtaCuentas.setFocusable(false);
        jbtnImportarCtaCuentas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtnImportarCtaCuentas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtnImportarCtaCuentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportarCtaCuentasActionPerformed(evt);
            }
        });
        jToolBar1.add(jbtnImportarCtaCuentas);

        jbtnImportarPoliza.setBackground(new java.awt.Color(178, 233, 187));
        jbtnImportarPoliza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/polcontcoi.png"))); // NOI18N
        jbtnImportarPoliza.setToolTipText("Exportar Pólizas");
        jbtnImportarPoliza.setFocusable(false);
        jbtnImportarPoliza.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtnImportarPoliza.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtnImportarPoliza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportarPolizaActionPerformed(evt);
            }
        });
        jToolBar1.add(jbtnImportarPoliza);
        jToolBar1.add(jSeparator1);

        jBtnSalir.setBackground(new java.awt.Color(178, 233, 187));
        jBtnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.png"))); // NOI18N
        jBtnSalir.setToolTipText("Salir de la aplicación");
        jBtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalirActionPerformed(evt);
            }
        });
        jToolBar1.add(jBtnSalir);

        jDPPrincipal1.setBackground(new java.awt.Color(205, 241, 236));
        jDPPrincipal1.setDragMode(javax.swing.JDesktopPane.OUTLINE_DRAG_MODE);
        jDPPrincipal1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jDPPrincipal1ComponentResized(evt);
            }
        });

        jLblLogo.setBackground(new java.awt.Color(77, 255, 209));
        jLblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.png"))); // NOI18N
        jDPPrincipal1.add(jLblLogo);
        jLblLogo.setBounds(100, 0, 550, 400);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logodesk.png"))); // NOI18N
        jLabel1.setText("j");
        jDPPrincipal1.add(jLabel1);
        jLabel1.setBounds(440, 270, 20, 20);

        jMenu1.setText("Archivo");

        jMIConfParams.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMIConfParams.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/miniconf.png"))); // NOI18N
        jMIConfParams.setText("Configuracion de parametros");
        jMIConfParams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIConfParamsActionPerformed(evt);
            }
        });
        jMenu1.add(jMIConfParams);

        jMISalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        jMISalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minisalir.png"))); // NOI18N
        jMISalir.setText("Salir");
        jMenu1.add(jMISalir);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Procesos");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMIReporte.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMIReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minictascontcoi.png"))); // NOI18N
        jMIReporte.setText("Exportar Cat. de Cuentas");
        jMIReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteActionPerformed(evt);
            }
        });
        jMenu3.add(jMIReporte);

        jMIPolizas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMIPolizas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minipolcontcoi.png"))); // NOI18N
        jMIPolizas.setText("Exportar Pólizas");
        jMIPolizas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIPolizasActionPerformed(evt);
            }
        });
        jMenu3.add(jMIPolizas);

        jMIImportarSaldos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        jMIImportarSaldos.setText("Importar saldos iniciales");
        jMIImportarSaldos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIImportarSaldosActionPerformed(evt);
            }
        });
        jMenu3.add(jMIImportarSaldos);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Ayuda");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        jMenuItem1.setText("Ayuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDPPrincipal1, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDPPrincipal1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))
        );

        jDPPrincipal1.getAccessibleContext().setAccessibleParent(jDPPrincipal1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AsignarIconos() {
        ImageIcon icono2 = (ImageIcon) jLabel1.getIcon();
        ImageIcon iconoFrame = new ImageIcon(icono2.getImage().getScaledInstance(45, 45, 20));
        this.setIconImage(iconoFrame.getImage());
    }

    private void impcatctas() {
        try {
            jMIConfParams.setEnabled(false);
            jMIReporte.setEnabled(false);
            jbtnImportarCtaCuentas.setEnabled(false);
            CatCtas ventana = new CatCtas();
            jDPPrincipal1.add(ventana);
            ventana.controlador = this.controladorCont;
            ventana.servidor = this.servidorCont;
            ventana.puerto = this.puertoCont;
            ventana.seguridadIntegrada = this.seguridadIntegrada;
            ventana.RutaonombreBDCont = this.RutaonombreBDCont;
            ventana.usuario = this.usuarioCont;
            ventana.contrasenia = this.contraseniaCont;
            ventana.controladorCOI = this.controladorCOI;
            ventana.servidorCOI = this.servidorCOI;
            ventana.puertoCOI = this.puertoCOI;
            ventana.RutaonombreBDCOI = this.RutaonombreBDCOI;
            ventana.usuarioCOI = this.usuarioCOI;
            ventana.contraseniaCOI = this.contraseniaCOI;
            ventana.padre = this;
            ventana.dxNiveles = dxNiveles;
            ventana.nomEmpre = this.noEmp;
            ventana.setVisible(true);
            ventana.setSelected(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void impPolizas() {
        try {
            jMIConfParams.setEnabled(false);
            jMIPolizas.setEnabled(false);
            jbtnImportarPoliza.setEnabled(false);
            ListadoPolizas ventana = new ListadoPolizas();
            ventana.padre = this;
            ventana.noEmpre = noEmp;
            ventana.dxNiveles = dxNiveles;
            jDPPrincipal1.add(ventana);
            ventana.setVisible(true);
            ventana.setSelected(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    private void jBtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalirActionPerformed
        // TODO add your handling code here:
        cerrarSesion();
    }//GEN-LAST:event_jBtnSalirActionPerformed

    private void jbtnImportarCtaCuentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportarCtaCuentasActionPerformed
        // TODO add your handling code here:
        if (banderaReportes == false) {
            impcatctas();
            banderaReportes = true;
        }
    }//GEN-LAST:event_jbtnImportarCtaCuentasActionPerformed

    private void jMIReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteActionPerformed
        // TODO add your handling code here:
        impcatctas();
    }//GEN-LAST:event_jMIReporteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        jLblLogo.setLocation(this.getWidth() / 2 - this.jLblLogo.getWidth() / 2, this.getHeight() / 2 - this.jLblLogo.getHeight() / 2 - 20);
        leerConfiguracion();
    }//GEN-LAST:event_formWindowOpened

    public String getTagValue(String tag, Element elemento) {
        NodeList lista = elemento.getElementsByTagName(tag).item(0).getChildNodes();
        Node valor = (Node) lista.item(0);
        return valor.getNodeValue();
    }

    public void leerConfiguracion() {
        try {
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = null;
            try {
                doc = dBuilder.parse(new File("ConfSistema.xml"));
                doc.getDocumentElement().normalize();
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(this, "No se pudo encontrar un archivo de configuración"
                        + "\n " + e, "Error", JOptionPane.ERROR_MESSAGE);
                jMIConfParams.setEnabled(false);
                System.exit(0);
            }
            /*
             * obtener el numero de la empresa
             */
            NodeList NLEmpresa = doc.getElementsByTagName("Empresa");
            Node NodeNLEmpresa = NLEmpresa.item(0);
            Element elementoNodeNLEmpresa = (Element) NodeNLEmpresa;
//            noEmp = getTagValue("NoEmp", elementoNodeNLEmpresa);

            //obtener configuracion de conexion a COntpaq
            NodeList NLRutaonombreBDCont = doc.getElementsByTagName("ConexionCONT");
            Node NodeNLRutaonombreBDCont = NLRutaonombreBDCont.item(0);
            Element elementoNodeNLRutaonombreBDCont = (Element) NodeNLRutaonombreBDCont;

            controladorCont = getTagValue("controladorBD", elementoNodeNLRutaonombreBDCont);
            RutaonombreBDCont = getTagValue("rutaonombreBD", elementoNodeNLRutaonombreBDCont);
            servidorCont = getTagValue("ip", elementoNodeNLRutaonombreBDCont);
            tipoCCont = getTagValue("tipoC", elementoNodeNLRutaonombreBDCont);
            usuarioCont = getTagValue("usuario", elementoNodeNLRutaonombreBDCont);
            contraseniaCont = getTagValue("contrasenia", elementoNodeNLRutaonombreBDCont);
            puertoCont = Integer.parseInt(getTagValue("puerto", elementoNodeNLRutaonombreBDCont));
            seguridadIntegrada = Boolean.parseBoolean(getTagValue("IntegratedSecurity", elementoNodeNLRutaonombreBDCont));
            objConexion = new CrearConexionFBoSQL(controladorCont, servidorCont, puertoCont,
                    RutaonombreBDCont, usuarioCont, contraseniaCont,seguridadIntegrada);
            conexionContpaqi = objConexion.getConexion();
            if (conexionContpaqi == null) {
                banderaCont = true;
            }

            //obtener configuracion de conexion a coi
            NodeList NLRutaonombreBD = doc.getElementsByTagName("ConexionSAE");
            Node NodeNLRutaonombreBD = NLRutaonombreBD.item(0);
            Element elementoNodeNLRutaonombreBD = (Element) NodeNLRutaonombreBD;

            controladorCOI = getTagValue("controladorBD", elementoNodeNLRutaonombreBD);
            RutaonombreBDCOI = getTagValue("rutaonombreBD", elementoNodeNLRutaonombreBD);
            servidorCOI = getTagValue("ip", elementoNodeNLRutaonombreBD);
            tipoCCOI = getTagValue("tipoC", elementoNodeNLRutaonombreBD);
            usuarioCOI = getTagValue("usuario", elementoNodeNLRutaonombreBD);
            contraseniaCOI = getTagValue("contrasenia", elementoNodeNLRutaonombreBD);
            puertoCOI = getTagValue("puerto", elementoNodeNLRutaonombreBD);
            objConexion = new CrearConexionFBoSQL(controladorCOI, servidorCOI, Integer.parseInt(puertoCOI),
                    RutaonombreBDCOI, usuarioCOI, contraseniaCOI,false);
            conexionCOI = objConexion.getConexion();

            if (conexionCOI == null) {
                banderaCOI = true;
            } else {
                getInfoEmpreCtas(conexionCOI, controladorCOI);
            }
            if (banderaCOI || banderaCont) {
                int opc2 = JOptionPane.showConfirmDialog(this, "Ocurriern errores al realizar las conexiones\n\n"
                        + "\nPara empezar a trabajar ¿Desea corregir las configuraciónes ahora?", "Error de conexión", JOptionPane.YES_NO_OPTION);
                if (opc2 == JOptionPane.YES_OPTION) {
                    banderaCOI = false;
                    banderaCont = false;
                    nvaConfiguracion();
                } else {
                    jMIPolizas.setEnabled(false);
                    jMIReporte.setEnabled(false);
                    jbtnImportarCtaCuentas.setEnabled(false);
                    jbtnImportarPoliza.setEnabled(false);
                    banderaCOI = false;
                    banderaCont = false;
                }
            }
            if (conexionContpaqi != null) {
                conexionContpaqi.close();
            }
            if (conexionCOI != null) {
                conexionCOI.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void getInfoEmpreCtas(Connection con, String controlador) {
        try {
            String noEmpresa = "";
            String paramSQL = "";
            Statement stmt = con.createStatement();
            if (controlador.equals("DevartSQLServer")) {
                paramSQL = " top ";
                ResultSet rs = stmt.executeQuery("SELECT * FROM INFORMATION_SCHEMA.TABLES");
                while (rs.next()) {
                    String nombreTabla = rs.getString(3);
                    if (nombreTabla.startsWith("PARAMEMP")) {
                        noEmpresa = nombreTabla.substring(nombreTabla.length() - 2);
                    }
                }
                rs.close();
            } else {
                paramSQL = " first ";
                DatabaseMetaData metaDatos;
                String tipos[] = new String[]{"TABLE", "VIEW"};
                ResultSet rsTablas;
                metaDatos = con.getMetaData();
                rsTablas = metaDatos.getTables(null, "ESQUEMA", "%", tipos);

                while (rsTablas.next()) {
                    String nombreTabla = rsTablas.getString(rsTablas.findColumn("TABLE_NAME"));
                    if (nombreTabla.startsWith("PARAMEMP")) {
                        noEmpresa = nombreTabla.substring(nombreTabla.length() - 2);
                    }
                }
                rsTablas.close();
            }

            noEmp = noEmpresa;
            dxNiveles = new int[9];
            ResultSet rs = stmt.executeQuery("SELECT " + paramSQL + " 1 DIGCTA1,DIGCTA2,DIGCTA3,DIGCTA4,DIGCTA5,DIGCTA6,DIGCTA7,DIGCTA8,DIGCTA9 "
                    + "from PARAMEMP" + noEmpresa);
            if (rs.next()) {
                dxNiveles[0] = rs.getInt(1);
                dxNiveles[1] = rs.getInt(2);
                dxNiveles[2] = rs.getInt(3);
                dxNiveles[3] = rs.getInt(4);
                dxNiveles[4] = rs.getInt(5);
                dxNiveles[5] = rs.getInt(6);
                dxNiveles[6] = rs.getInt(7);
                dxNiveles[7] = rs.getInt(8);
                dxNiveles[8] = rs.getInt(9);
            }
            rs.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentResized

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorResized

    private void jDPPrincipal1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jDPPrincipal1ComponentResized
        // TODO add your handling code here
        jLblLogo.setLocation(this.getWidth() / 2 - this.jLblLogo.getWidth() / 2, this.getHeight() / 2 - this.jLblLogo.getHeight() / 2 - 20);

    }//GEN-LAST:event_jDPPrincipal1ComponentResized

    private void jMIConfParamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIConfParamsActionPerformed
        // TODO add your handling code here:
        nvaConfiguracion();
    }//GEN-LAST:event_jMIConfParamsActionPerformed
    public void nvaConfiguracion() {
        try {
            jMIConfParams.setEnabled(false);
            jMIReporte.setEnabled(false);
            jbtnImportarCtaCuentas.setEnabled(false);
            ConfParamsSistema ventana = new ConfParamsSistema();
            jDPPrincipal1.add(ventana);
            ventana.setVisible(true);
            ventana.padre = this;
            ventana.setSelected(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        cerrarSesion();
    }//GEN-LAST:event_formWindowClosing

    private void jbtnImportarPolizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportarPolizaActionPerformed
        // TODO add your handling code here:
        impPolizas();
    }//GEN-LAST:event_jbtnImportarPolizaActionPerformed

    private void jMIPolizasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIPolizasActionPerformed
        // TODO add your handling code here:
        impPolizas();
    }//GEN-LAST:event_jMIPolizasActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        abrirAyuda();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMIImportarSaldosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIImportarSaldosActionPerformed
        // TODO add your handling code here:
        getVentanaImportarSaldos();
    }//GEN-LAST:event_jMIImportarSaldosActionPerformed
    public void getVentanaImportarSaldos() {
        try {
            if (conexionContpaqi != null) {
                conexionContpaqi.close();
                frmImportarSaldosIniciales objPoliza = new frmImportarSaldosIniciales(this, true);
                objPoliza.padre = this;
                objPoliza.controlador = this.controladorCont;
                objPoliza.servidor = this.servidorCont;
                objPoliza.puerto = this.puertoCont;
                objPoliza.seguridadIntegrada = this.seguridadIntegrada;
                objPoliza.RutaonombreBDCont = this.RutaonombreBDCont;
                objPoliza.usuario = this.usuarioCont;
                objPoliza.contrasenia = this.contraseniaCont;
                objPoliza.noEmpre = this.noEmp;
                objPoliza.controladorCOI = this.controladorCOI;
                objPoliza.servidorCOI = this.servidorCOI;
                objPoliza.puertoCOI = this.puertoCOI;
                objPoliza.RutaonombreBDCOI = this.RutaonombreBDCOI;
                objPoliza.usuarioCOI = this.usuarioCOI;
                objPoliza.contraseniaCOI = this.contraseniaCOI;
                objPoliza.setVisible(true);
            } else {
                if (conexionContpaqi != null) {
                    conexionContpaqi.close();
                }
                JOptionPane.showMessageDialog(this, "Seleccione una base de datos para trabajar", "No ha seleccionado una base de datos", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void abrirAyuda() {
        String cadena;
        File fichero = new File("ayuda/Migrar.chm");
        cadena = fichero.getAbsolutePath();
        try {
            Runtime rt = Runtime.getRuntime();
            String[] callAndArgs = {"C:/WINDOWS/hh.exe", cadena};
            Process child = rt.exec(callAndArgs);
        } catch (Exception eee) {
            JOptionPane.showMessageDialog(this, eee);
        }
    }

    public void cerrarSesion() {
        try {

            JInternalFrame[] allFrames = jDPPrincipal1.getAllFrames();
            if (allFrames.length > 0) {
                int opc = JOptionPane.showConfirmDialog(this, "¿Desea finalizar sesión?\n\n"
                        + "Si Existen ventanas activas toda la informacion se perdera si continua", "Cerrar sesión", JOptionPane.YES_NO_OPTION);
                if (opc == JOptionPane.YES_OPTION) {
                    for (int i = 0; i < allFrames.length; i++) {
                        JInternalFrame jInternalFrame = allFrames[i];
                        jInternalFrame.setClosed(true);
                    }
                    System.exit(0);
                } else {
                    super.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                }
            } else {
                int opc = JOptionPane.showConfirmDialog(this, "¿Desea finalizar sesión?", "Cerrar sesión", JOptionPane.YES_NO_OPTION);
                if (opc == JOptionPane.YES_OPTION) {
                    System.exit(0);
                } else {
                    super.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUIPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnSalir;
    public javax.swing.JDesktopPane jDPPrincipal1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLblLogo;
    public javax.swing.JMenuItem jMIConfParams;
    private javax.swing.JMenuItem jMIImportarSaldos;
    public javax.swing.JMenuItem jMIPolizas;
    public javax.swing.JMenuItem jMIReporte;
    private javax.swing.JMenuItem jMISalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    protected javax.swing.JButton jbtnImportarCtaCuentas;
    protected javax.swing.JButton jbtnImportarPoliza;
    // End of variables declaration//GEN-END:variables
}

class FocusGrabber implements Runnable {

    private JComponent component;

    public FocusGrabber(JComponent component) {
        this.component = component;
    }

    public void run() {
        component.grabFocus();
    }
}
