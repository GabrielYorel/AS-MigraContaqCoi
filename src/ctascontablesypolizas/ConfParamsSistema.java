/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ctascontablesypolizas;

import ctascontablesypolizas.clases.CrearConexionFBoSQL;
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Result;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author Gabriel
 */
public class ConfParamsSistema extends javax.swing.JInternalFrame {

    private Connection conexionContpaqi;
    protected GUIPrincipal padre;
    private String ServidorCont;
    private String ServidorCOI;
    private int totalDigitos;
    private File fFileSAE;
    private CrearConexionFBoSQL objConexion;
    private boolean bandereaConexiónCOI;
    private boolean bandereaConexiónCont;
    private String controladorCOI;
    private String RutaonombreBDCOI;
    private String tipoCCOI;
    private String usuarioCOI;
    private String contraseniaCOI;
    private String puertoCOI;
    private String controladorCont;
    private String RutaonombreBDCont;
    private String tipoCCont;
    private String usuarioCont;
    private String contraseniaCont;
    private String puertoCont;
    private boolean seguridadIntegrada;
    private Connection conexionCOI;

    /**
     * Creates new form Configuracion
     */
    public ConfParamsSistema() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jBtnAceptar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jbtnProbarconexion = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jBtnCancelar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jtxtBaseDatosCont = new javax.swing.JTextField();
        jCbTipoConexionCont = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jtxtServidorCont = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtUsuarioCont = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtxtPuertoCont = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtxtContraseniaCont = new javax.swing.JPasswordField();
        jcbcontroladorBDCont = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        chkSecurityIntegrada = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jtxtrutaOnombreBDCOI = new javax.swing.JTextField();
        jLblSAE = new javax.swing.JLabel();
        jtxtNomOServCOI = new javax.swing.JTextField();
        jtxtUsuarioCOI = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jcbcontroladorBDCOI = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jtxtExaminarCOI = new javax.swing.JButton();
        jlblrutaobd = new javax.swing.JLabel();
        jCbTipoConexionCOI = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jtxtcontraseniaCOI = new javax.swing.JPasswordField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jtxtpuertoCOI = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jtxtNoEmpresa = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtn1 = new javax.swing.JTextField();
        txtn2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtn3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtn4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtn5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtn6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtn7 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtn8 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtn9 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Configuracion de parametros de la aplicación");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/miniconf.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jToolBar1.setBackground(new java.awt.Color(178, 233, 187));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jBtnAceptar.setBackground(new java.awt.Color(178, 233, 187));
        jBtnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        jBtnAceptar.setToolTipText("Guardar Configuración");
        jBtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAceptarActionPerformed(evt);
            }
        });
        jToolBar1.add(jBtnAceptar);
        jToolBar1.add(jSeparator2);

        jbtnProbarconexion.setBackground(new java.awt.Color(178, 233, 187));
        jbtnProbarconexion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/test.png"))); // NOI18N
        jbtnProbarconexion.setToolTipText("Probar conexión");
        jbtnProbarconexion.setFocusable(false);
        jbtnProbarconexion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtnProbarconexion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtnProbarconexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProbarconexionActionPerformed(evt);
            }
        });
        jToolBar1.add(jbtnProbarconexion);
        jToolBar1.add(jSeparator1);

        jBtnCancelar.setBackground(new java.awt.Color(178, 233, 187));
        jBtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.png"))); // NOI18N
        jBtnCancelar.setToolTipText("Salir al menú principal");
        jBtnCancelar.setEnabled(false);
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });
        jToolBar1.add(jBtnCancelar);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nueva Conexion"));

        jCbTipoConexionCont.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "En red", "Local" }));
        jCbTipoConexionCont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbTipoConexionContActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo de conexión:");

        jtxtServidorCont.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtServidorContKeyTyped(evt);
            }
        });

        jLabel3.setText("Servidor:");
        jLabel3.setToolTipText("");

        jLabel4.setText("Base de datos:");

        jLabel10.setText("Usuario:");

        jtxtPuertoCont.setText("1433");
        jtxtPuertoCont.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtPuertoContKeyTyped(evt);
            }
        });

        jLabel11.setText("Contraseña:");

        jLabel12.setText("Puerto:");

        jcbcontroladorBDCont.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DevartSQLServer" }));
        jcbcontroladorBDCont.setEnabled(false);
        jcbcontroladorBDCont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbcontroladorBDContActionPerformed(evt);
            }
        });

        jLabel22.setText("Controlador:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtServidorCont)
                    .addComponent(jCbTipoConexionCont, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtxtContraseniaCont)
                    .addComponent(jtxtPuertoCont)
                    .addComponent(jtxtBaseDatosCont)
                    .addComponent(jtxtUsuarioCont, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbcontroladorBDCont, 0, 157, Short.MAX_VALUE))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbcontroladorBDCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCbTipoConexionCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtServidorCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtBaseDatosCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtUsuarioCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jtxtContraseniaCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtPuertoCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(20, 20, 20))
        );

        chkSecurityIntegrada.setText("Seguridad integrada");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(chkSecurityIntegrada)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkSecurityIntegrada)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Conexión a CONTPAQ i", jPanel5);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Configuración a base de datos de CONTPAQ I", jPanel3);

        jTabbedPane3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane3StateChanged(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setText("Servidor (Nombre o IP):");

        jLblSAE.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        jtxtNomOServCOI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtNomOServCOIKeyTyped(evt);
            }
        });

        jtxtUsuarioCOI.setText("SYSDBA");
        jtxtUsuarioCOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtUsuarioCOIActionPerformed(evt);
            }
        });

        jLabel17.setText("Controlador:");

        jcbcontroladorBDCOI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DevartInterBase", "DevartSQLServer" }));
        jcbcontroladorBDCOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbcontroladorBDCOIActionPerformed(evt);
            }
        });

        jLabel18.setText("Tipo de conexión:");

        jtxtExaminarCOI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/examinar.png"))); // NOI18N
        jtxtExaminarCOI.setToolTipText("Seleccionar archivo .fdb");
        jtxtExaminarCOI.setEnabled(false);
        jtxtExaminarCOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtExaminarCOIActionPerformed(evt);
            }
        });

        jlblrutaobd.setText("Ruta BD:");

        jCbTipoConexionCOI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "En red", "Local" }));
        jCbTipoConexionCOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbTipoConexionCOIActionPerformed(evt);
            }
        });

        jLabel19.setText("Puerto");

        jtxtcontraseniaCOI.setText("masterkey");

        jLabel20.setText("Contraseña");

        jLabel21.setText("Nombre de usuario");

        jtxtpuertoCOI.setText("3050");
        jtxtpuertoCOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtpuertoCOIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblSAE, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxtpuertoCOI)
                            .addComponent(jtxtcontraseniaCOI, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlblrutaobd)
                            .addComponent(jLabel21)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCbTipoConexionCOI, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbcontroladorBDCOI, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtNomOServCOI, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jtxtrutaOnombreBDCOI, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtExaminarCOI, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtxtUsuarioCOI, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLblSAE, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbcontroladorBDCOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jCbTipoConexionCOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jtxtNomOServCOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtxtrutaOnombreBDCOI)
                        .addComponent(jlblrutaobd))
                    .addComponent(jtxtExaminarCOI, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtUsuarioCOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jtxtcontraseniaCOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtpuertoCOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(368, 368, 368))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Configuración de base de datos de ASPEL COI", jPanel4);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "No empresa COI"));
        jPanel8.setToolTipText("");

        jLabel23.setText("No. Empresa:");

        jtxtNoEmpresa.setEditable(false);
        jtxtNoEmpresa.setText("01");
        jtxtNoEmpresa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtNoEmpresaFocusLost(evt);
            }
        });
        jtxtNoEmpresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtNoEmpresaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel23)
                .addGap(27, 27, 27)
                .addComponent(jtxtNoEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jtxtNoEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dígitos por nivel"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("1:");

        txtn1.setEditable(false);
        txtn1.setText("0");

        txtn2.setEditable(false);
        txtn2.setText("0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("2:");

        txtn3.setEditable(false);
        txtn3.setText("0");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("3:");

        txtn4.setEditable(false);
        txtn4.setText("0");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("4:");

        txtn5.setEditable(false);
        txtn5.setText("0");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("5:");

        txtn6.setEditable(false);
        txtn6.setText("0");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("6:");

        txtn7.setEditable(false);
        txtn7.setText("0");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("7:");

        txtn8.setEditable(false);
        txtn8.setText("0");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("8:");

        txtn9.setEditable(false);
        txtn9.setText("0");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("9:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtn9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtn3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtn6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(txtn5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(txtn9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtn7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(txtn8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(71, 71, 71))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("No Empresa y digitos por nivel", jPanel9);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Configuración de ASPEL COI", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void guardarConfiguraciones() {
        try {
            File XMlFile = new File("ConfSistema.xml");
            if (XMlFile.exists()) {
                DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                Document docG = dBuilder.parse(XMlFile);
                TransformerFactory tFactory = TransformerFactory.newInstance();
                Transformer tFormer = tFactory.newTransformer();
                /*
                 * almacennar el numero de empresa de coi
                 */
                //obtener Conexion configurada COI
                NodeList NLconexionEmpresa = docG.getElementsByTagName("Empresa");
                Node NodeconexionEmpresa = NLconexionEmpresa.item(0);
                Element elementoEmpresa = (Element) NodeconexionEmpresa;
                if (!jtxtNoEmpresa.getText().trim().equalsIgnoreCase("")) {
                    elementoEmpresa.getElementsByTagName("NoEmp").item(0).setTextContent(jtxtNoEmpresa.getText().trim());
                } else {
                    elementoEmpresa.getElementsByTagName("NoEmp").item(0).setTextContent("01");
                }
                //obtener Conexion configurada COI
                NodeList NLconexionCOI = docG.getElementsByTagName("ConexionSAE");
                Node NodeconexionCOI = NLconexionCOI.item(0);
                Element elementoCOI = (Element) NodeconexionCOI;
                elementoCOI.getElementsByTagName("tipoC").item(0).setTextContent(jCbTipoConexionCOI.getSelectedItem() + "");
                elementoCOI.getElementsByTagName("controladorBD").item(0).setTextContent(jcbcontroladorBDCOI.getSelectedItem() + "");
                if (!jtxtNomOServCOI.getText().trim().equalsIgnoreCase("")) {
                    elementoCOI.getElementsByTagName("ip").item(0).setTextContent(jtxtNomOServCOI.getText());
                } else {
                    elementoCOI.getElementsByTagName("ip").item(0).setTextContent("null");
                }
                if (!jtxtrutaOnombreBDCOI.getText().trim().equalsIgnoreCase("")) {
                    elementoCOI.getElementsByTagName("rutaonombreBD").item(0).setTextContent(jtxtrutaOnombreBDCOI.getText());
                } else {
                    elementoCOI.getElementsByTagName("rutaonombreBD").item(0).setTextContent("null");
                }
                if (!jtxtUsuarioCOI.getText().trim().equalsIgnoreCase("")) {
                    elementoCOI.getElementsByTagName("usuario").item(0).setTextContent(jtxtUsuarioCOI.getText());
                } else {
                    elementoCOI.getElementsByTagName("usuario").item(0).setTextContent("null");
                }
                if (!new String(jtxtcontraseniaCOI.getPassword()).trim().equalsIgnoreCase("")) {
                    elementoCOI.getElementsByTagName("contrasenia").item(0).setTextContent(new String(jtxtcontraseniaCOI.getPassword()));
                } else {
                    elementoCOI.getElementsByTagName("contrasenia").item(0).setTextContent("null");
                }
                if (!jtxtpuertoCOI.getText().trim().equalsIgnoreCase("")) {
                    elementoCOI.getElementsByTagName("puerto").item(0).setTextContent(jtxtpuertoCOI.getText());
                } else {
                    elementoCOI.getElementsByTagName("puerto").item(0).setTextContent("null");
                }

                //obtener Conexion configurada contpaq
                NodeList NLconexionContpaqies = docG.getElementsByTagName("ConexionCONT");
                Node NodeconexionContpaqi = NLconexionContpaqies.item(0);
                Element elemento = (Element) NodeconexionContpaqi;
                elemento.getElementsByTagName("tipoC").item(0).setTextContent(jCbTipoConexionCont.getSelectedItem() + "");
                elemento.getElementsByTagName("controladorBD").item(0).setTextContent(jcbcontroladorBDCont.getSelectedItem() + "");
                if (!jtxtServidorCont.getText().trim().equalsIgnoreCase("")) {
                    elemento.getElementsByTagName("ip").item(0).setTextContent(jtxtServidorCont.getText());
                } else {
                    elemento.getElementsByTagName("ip").item(0).setTextContent("null");
                }
                if (!jtxtBaseDatosCont.getText().trim().equalsIgnoreCase("")) {
                    elemento.getElementsByTagName("rutaonombreBD").item(0).setTextContent(jtxtBaseDatosCont.getText());
                } else {
                    elemento.getElementsByTagName("rutaonombreBD").item(0).setTextContent("null");
                }
                if (!jtxtUsuarioCont.getText().trim().equalsIgnoreCase("")) {
                    elemento.getElementsByTagName("usuario").item(0).setTextContent(jtxtUsuarioCont.getText());
                } else {
                    elemento.getElementsByTagName("usuario").item(0).setTextContent("null");
                }
                if (!new String(jtxtContraseniaCont.getPassword()).trim().equalsIgnoreCase("")) {
                    elemento.getElementsByTagName("contrasenia").item(0).setTextContent(new String(jtxtContraseniaCont.getPassword()));
                } else {
                    elemento.getElementsByTagName("contrasenia").item(0).setTextContent("null");
                }
                if (!jtxtPuertoCont.getText().trim().equalsIgnoreCase("")) {
                    elemento.getElementsByTagName("puerto").item(0).setTextContent(jtxtPuertoCont.getText());
                } else {
                    elemento.getElementsByTagName("puerto").item(0).setTextContent("null");
                }
                elemento.getElementsByTagName("IntegratedSecurity").item(0).setTextContent(chkSecurityIntegrada.isSelected() + "");

                docG.normalize();
                Source source = new DOMSource(docG);
                Result dest = new StreamResult(new java.io.File("ConfSistema.xml"));
                tFormer.transform(source, dest);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro un archivo de confguracion para la aplicación", "Falta un archivo", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void jBtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAceptarActionPerformed
        // TODO add your handling code here:
        guardar(true);
    }//GEN-LAST:event_jBtnAceptarActionPerformed
    public void guardar(boolean salir) {
        try {
            if (!jtxtServidorCont.getText().trim().equalsIgnoreCase("")) {
                if (!jtxtBaseDatosCont.getText().trim().equalsIgnoreCase("")) {
                    if (!jtxtUsuarioCont.getText().trim().equalsIgnoreCase("")) {
                        if (!jtxtPuertoCont.getText().trim().equalsIgnoreCase("")) {
                            if (probarConexionCont()) {
                                if (probarConexionCOI()) {
                                    validarAccesos();
                                    //todo correcto y almacenar los directorios
                                    guardarConfiguraciones();
                                    JOptionPane.showMessageDialog(this, "La configuración se almaceno correctamente", "Exito al guardar", JOptionPane.INFORMATION_MESSAGE);
                                    if (salir) {
                                        salirFin();
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Error al realizar la conexion de la base de datos de ASPEL COI\n"
                                            + "Por favor verifique que sea un archivo valido o no este dañado", "Error de conexión", JOptionPane.ERROR_MESSAGE);
                                    conexionContpaqi = null;
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Error al realizar la conexion de la base de datos de CONTPAQ i\n"
                                        + "Por favor verifique que sea un archivo valido o no este dañado", "Error de conexión", JOptionPane.ERROR_MESSAGE);
                                conexionContpaqi = null;
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Indique el puerto.");
                            jtxtBaseDatosCont.requestFocus();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Indique el nombre de usuario para el acceso a SQL Server.");
                        jtxtBaseDatosCont.requestFocus();
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Indique el nombre de la base de datos");
                    jtxtBaseDatosCont.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Indique el nombre o direccion ip del servidor");
                jtxtServidorCont.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
        // TODO add your handling code here:
        cerrarConfiguracion();
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    public void cerrarConfiguracion() {
        try {
            objConexion = new CrearConexionFBoSQL(controladorCont, ServidorCont, Integer.parseInt(puertoCont),
                    RutaonombreBDCont, usuarioCont, contraseniaCont,seguridadIntegrada);
            conexionContpaqi = objConexion.getConexion();
            if (conexionContpaqi != null) {
                bandereaConexiónCont = true;
                conexionContpaqi.close();
            } else {
                bandereaConexiónCont = false;
            }
            objConexion = new CrearConexionFBoSQL(controladorCOI, ServidorCOI, Integer.parseInt(puertoCOI),
                    RutaonombreBDCOI, usuarioCOI, contraseniaCOI,false);
            conexionCOI = objConexion.getConexion();
            if (conexionCOI != null) {
                bandereaConexiónCOI = true;
                conexionCOI.close();
            } else {
                bandereaConexiónCOI = false;
            }
            String cadena = "";
            if (bandereaConexiónCOI == false) {
                cadena += " ASPEL COI ";
            }
            if (bandereaConexiónCont == false) {
                cadena += " CONTPAQ i ";
            }

            if (bandereaConexiónCOI == false || bandereaConexiónCont == false) {

                int opc = JOptionPane.showConfirmDialog(this, "Ocurrieron errores al establecer la conexión de " + cadena + "\n\n"
                        + "\nPara empezar a trabajar es necesario corregirlas\n"
                        + "¿Dese a realizarlo?", "Sin conexión", JOptionPane.YES_NO_OPTION);
                if (opc == JOptionPane.YES_OPTION) {
                    super.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                } else {
                    salirFin();
                }
            } else {
                salirFin();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public void leerConfiguracion() {
        try {
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            File confsys = new File("ConfSistema.xml");
            if (confsys.exists()) {
                Document doc = dBuilder.parse(confsys);
                doc.getDocumentElement().normalize();
                /*
                 * obtener el numero de la empresa
                 */
                NodeList NLEmpresa = doc.getElementsByTagName("Empresa");
                Node NodeNLEmpresa = NLEmpresa.item(0);
                Element elementoNodeNLEmpresa = (Element) NodeNLEmpresa;
                String noEmp = getTagValue("NoEmp", elementoNodeNLEmpresa);
                jtxtNoEmpresa.setText(noEmp);

                //obtener configuracion de conexion a COntpaq
                NodeList NLRutaonombreBDCont = doc.getElementsByTagName("ConexionCONT");
                Node NodeNLRutaonombreBDCont = NLRutaonombreBDCont.item(0);
                Element elementoNodeNLRutaonombreBDCont = (Element) NodeNLRutaonombreBDCont;

                controladorCont = getTagValue("controladorBD", elementoNodeNLRutaonombreBDCont);
                RutaonombreBDCont = getTagValue("rutaonombreBD", elementoNodeNLRutaonombreBDCont);
                ServidorCont = getTagValue("ip", elementoNodeNLRutaonombreBDCont);
                tipoCCont = getTagValue("tipoC", elementoNodeNLRutaonombreBDCont);
                usuarioCont = getTagValue("usuario", elementoNodeNLRutaonombreBDCont);
                contraseniaCont = getTagValue("contrasenia", elementoNodeNLRutaonombreBDCont);
                puertoCont = getTagValue("puerto", elementoNodeNLRutaonombreBDCont);
                seguridadIntegrada = Boolean.parseBoolean(getTagValue("IntegratedSecurity", elementoNodeNLRutaonombreBDCont));

                if (!RutaonombreBDCont.equalsIgnoreCase("null")) {
                    jtxtBaseDatosCont.setText(RutaonombreBDCont);
                    if (tipoCCont.equalsIgnoreCase("Local")) {
                        jCbTipoConexionCont.setSelectedIndex(1);
                        jtxtServidorCont.setEditable(false);
                        jtxtBaseDatosCont.setEditable(true);
                    } else {
                        jCbTipoConexionCont.setSelectedIndex(0);
                        jtxtServidorCont.setText(ServidorCont);
                        jtxtServidorCont.setEditable(true);
                        jtxtBaseDatosCont.setEditable(true);
                    }
                    jtxtServidorCont.setText(ServidorCont);
                    jtxtBaseDatosCont.setText(RutaonombreBDCont);
                    jtxtUsuarioCont.setText(usuarioCont);
                    jtxtContraseniaCont.setText(contraseniaCont);
                    jtxtPuertoCont.setText(puertoCont + "");
                    chkSecurityIntegrada.setSelected(seguridadIntegrada);

                    objConexion = new CrearConexionFBoSQL(controladorCont, ServidorCont, Integer.parseInt(puertoCont),
                            RutaonombreBDCont, usuarioCont, contraseniaCont,seguridadIntegrada);
                    conexionContpaqi = objConexion.getConexion();
                    if (conexionContpaqi == null) {
                        JOptionPane.showMessageDialog(this, "No se pudo realizar la conexión a la base de datos de CONTPAQ i", "Erro en la configuracón", JOptionPane.ERROR_MESSAGE);
                    } else {
                        conexionContpaqi.close();
                    }
                }

                //obtener configuracion de conexion a coi
                NodeList NLRutaonombreBD = doc.getElementsByTagName("ConexionSAE");
                Node NodeNLRutaonombreBD = NLRutaonombreBD.item(0);
                Element elementoNodeNLRutaonombreBD = (Element) NodeNLRutaonombreBD;

                controladorCOI = getTagValue("controladorBD", elementoNodeNLRutaonombreBD);
                RutaonombreBDCOI = getTagValue("rutaonombreBD", elementoNodeNLRutaonombreBD);
                ServidorCOI = getTagValue("ip", elementoNodeNLRutaonombreBD);
                tipoCCOI = getTagValue("tipoC", elementoNodeNLRutaonombreBD);
                usuarioCOI = getTagValue("usuario", elementoNodeNLRutaonombreBD);
                contraseniaCOI = getTagValue("contrasenia", elementoNodeNLRutaonombreBD);
                puertoCOI = getTagValue("puerto", elementoNodeNLRutaonombreBD);

                if (!controladorCOI.equals("DevartSQLServer")) {
                    jlblrutaobd.setText("Ruta BD:");
                    jcbcontroladorBDCOI.setSelectedIndex(0);
                } else {
                    jlblrutaobd.setText("Nombre BD:");
                    jtxtExaminarCOI.setVisible(false);
                    jcbcontroladorBDCOI.setSelectedIndex(1);
                }

                jtxtUsuarioCOI.setText(usuarioCOI);
                jtxtcontraseniaCOI.setText(contraseniaCOI);
                jtxtpuertoCOI.setText(puertoCOI);
                if (!RutaonombreBDCOI.equalsIgnoreCase("null")) {
                    jtxtrutaOnombreBDCOI.setText(RutaonombreBDCOI);
                    if (tipoCCOI.equalsIgnoreCase("Local")) {
                        jCbTipoConexionCOI.setSelectedIndex(1);
                        jtxtNomOServCOI.setEditable(false);
                        jtxtExaminarCOI.setEnabled(true);
                    } else {
                        jCbTipoConexionCOI.setSelectedIndex(0);
                        jtxtNomOServCOI.setText(ServidorCOI);
                        jtxtNomOServCOI.setEditable(true);
                        jtxtrutaOnombreBDCOI.setEditable(true);
                    }
                    objConexion = new CrearConexionFBoSQL(controladorCOI, ServidorCOI, Integer.parseInt(puertoCOI),
                            RutaonombreBDCOI, usuarioCOI, contraseniaCOI,false);
                    conexionCOI = objConexion.getConexion();
                    if (conexionCOI == null) {
                        JOptionPane.showMessageDialog(this, "No se pudo realizar la conexión a la base de datos de CONTPAQ i", "Erro en la configuracón", JOptionPane.ERROR_MESSAGE);
                        jBtnAceptar.setEnabled(false);
                        jLblSAE.setText("Eror al establecer la conexion");
                        jLblSAE.setForeground(new Color(255, 51, 51));
                    } else {
                        getInfoEmpreCtas(conexionCOI, controladorCOI);
                        jLblSAE.setText("Conexión realizada con exito");
                        jLblSAE.setForeground(new Color(0, 0, 204));
                        jBtnAceptar.setEnabled(true);
                    }
                    fFileSAE = new File(RutaonombreBDCOI);

                } else {
                    jLblSAE.setText("No se ha detectado una configuración");
                    jLblSAE.setForeground(new Color(255, 51, 51));;
                }

                validarAccesos();
                jBtnCancelar.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro un archivo de confguracion para la aplicación", "Falta un archivo", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void getInfoEmpreCtas(Connection con, String controlador) {
        try {
            String noEmpresa = "";
            String paramSQL = "";
            Statement stmt = con.createStatement();
            if (controlador.equals("DevartSQLServer")) {
                paramSQL = " top ";
                ResultSet rs = stmt.executeQuery("SELECT * FROM INFORMATION_SCHEMA.TABLES");
                while (rs.next()) {
                    String nombreTabla = rs.getString(3);
                    if (nombreTabla.startsWith("PARAMEMP")) {
                        noEmpresa = nombreTabla.substring(nombreTabla.length() - 2);
                    }
                }
                rs.close();
            } else {
                paramSQL = " first ";
                DatabaseMetaData metaDatos;
                String tipos[] = new String[]{"TABLE", "VIEW"};
                ResultSet rsTablas;
                metaDatos = con.getMetaData();
                rsTablas = metaDatos.getTables(null, "ESQUEMA", "%", tipos);

                while (rsTablas.next()) {
                    String nombreTabla = rsTablas.getString(rsTablas.findColumn("TABLE_NAME"));
                    if (nombreTabla.startsWith("PARAMEMP")) {
                        noEmpresa = nombreTabla.substring(nombreTabla.length() - 2);
                    }
                }
                rsTablas.close();
            }
            jtxtNoEmpresa.setText(noEmpresa);
            ResultSet rs = stmt.executeQuery("SELECT " + paramSQL + " 1 DIGCTA1,DIGCTA2,DIGCTA3,DIGCTA4,DIGCTA5,DIGCTA6,DIGCTA7,DIGCTA8,DIGCTA9 "
                    + "from PARAMEMP" + noEmpresa);
            if (rs.next()) {
                txtn1.setText(rs.getString(1));
                txtn2.setText(rs.getString(2));
                txtn3.setText(rs.getString(3));
                txtn4.setText(rs.getString(4));
                txtn5.setText(rs.getString(5));
                txtn6.setText(rs.getString(6));
                txtn7.setText(rs.getString(7));
                txtn8.setText(rs.getString(8));
                txtn9.setText(rs.getString(9));
            }
            rs.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void validarAccesos() {
        if (conexionContpaqi != null) {
            jBtnAceptar.setEnabled(true);
        }
    }

    public String getTagValue(String tag, Element elemento) {
        NodeList lista = elemento.getElementsByTagName(tag).item(0).getChildNodes();
        Node valor = (Node) lista.item(0);
        return valor.getNodeValue();
    }
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        this.setLocation(this.getParent().getWidth() / 2 - this.getWidth() / 2, this.getParent().getHeight() / 2 - this.getHeight() / 2 - 20);
        leerConfiguracion();
    }//GEN-LAST:event_formInternalFrameOpened
    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        cerrarConfiguracion();
    }//GEN-LAST:event_formInternalFrameClosing
    public String obtenerDireccionIPLocal() {
        String IP;
        try {
            IP = "localhost";
//            InetAddress addr = InetAddress.getLocalHost();
//            String hostname = addr.getHostName();
//            IP = addr.getHostAddress();
//            System.out.println("Host: " + hostname);
//            System.out.println("IP: " + addr.getHostAddress());
        } catch (Exception e) {
            IP = null;
            e.printStackTrace();
        }
        return IP;
    }
    private void jbtnProbarconexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProbarconexionActionPerformed
        // TODO add your handling code here:
        try {
            if (probarConexionCOI()) {
                if (probarConexionCont()) {
                    JOptionPane.showMessageDialog(this, "La conexiónes se realizaron correctamente", "Exito en las conexiiones", JOptionPane.INFORMATION_MESSAGE);
                    jBtnAceptar.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Error al realizar la conexion a la base de datos  de CONTPAQ i\n"
                            + "Por favor verifique los parametros de la configuración", "Error de conexión", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error al realizar la conexion  a la base de datos de ASPEL COI\n"
                        + "Por favor verifique los parametros de la configuración", "Error de conexión", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jbtnProbarconexionActionPerformed
    static String names[] = {"jtxtN1", "jtxtN2", "jtxtN3", "jtxtN4", "jtxtN5", "jtxtN6", "jtxtN7", "jtxtN8", "jtxtN9"};

    public void validarAccesosTrue() {
        if (conexionContpaqi == null) {
            jBtnAceptar.setEnabled(false);
        }
    }
    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameIconified

    private void jtxtNoEmpresaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNoEmpresaKeyTyped
        // TODO add your handling code here:
        validarNumCaracteres(evt, this.jtxtNoEmpresa);
    }//GEN-LAST:event_jtxtNoEmpresaKeyTyped

    private void jtxtpuertoCOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtpuertoCOIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtpuertoCOIActionPerformed

    private void jCbTipoConexionCOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbTipoConexionCOIActionPerformed
        // TODO add your handling code here:
        if (jCbTipoConexionCOI.getSelectedIndex() == 0) {
            if (!ServidorCOI.equalsIgnoreCase("")) {
                jtxtNomOServCOI.setText(ServidorCOI);
            } else {
                jtxtNomOServCOI.setText("");
            }
            jtxtNomOServCOI.setEditable(true);
        }
        if (jCbTipoConexionCOI.getSelectedIndex() == 1) {
            jtxtNomOServCOI.setEditable(false);
            jtxtNomOServCOI.setText(obtenerDireccionIPLocal());
        }
        jtxtExaminarCOI.setEnabled(true);
    }//GEN-LAST:event_jCbTipoConexionCOIActionPerformed

    private void jtxtExaminarCOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtExaminarCOIActionPerformed
        // TODO add your handling code here:
        if (!jtxtNomOServCOI.getText().trim().equalsIgnoreCase("")) {
            if (!jtxtrutaOnombreBDCOI.getText().trim().equalsIgnoreCase("")) {
                if (!jtxtUsuarioCOI.getText().trim().equalsIgnoreCase("")) {
                    if (!jtxtpuertoCOI.getText().trim().equalsIgnoreCase("")) {
                        JFileChooser fcD = new JFileChooser();
                        if (fFileSAE != null) {
                            fcD.setCurrentDirectory(fFileSAE);
                        }
                        fcD.addChoosableFileFilter(new FileNameExtensionFilter(".fdb", "FDB"));
                        fcD.setFileSelectionMode(JFileChooser.FILES_ONLY);
                        int MostrarFileChosser = fcD.showDialog(this, "Selec. Base de Datos");
                        if (MostrarFileChosser == JFileChooser.APPROVE_OPTION) {
                            try {
                                fFileSAE = fcD.getSelectedFile();
                                jtxtrutaOnombreBDCOI.setText(fFileSAE.getPath());
                                objConexion = new CrearConexionFBoSQL(jcbcontroladorBDCOI.getSelectedItem().toString(),
                                        jtxtNomOServCOI.getText(), Integer.parseInt(jtxtpuertoCOI.getText().trim()), jtxtrutaOnombreBDCOI.getText(),
                                        jtxtUsuarioCOI.getText(), new String(jtxtcontraseniaCOI.getPassword()),false);
                                conexionContpaqi = objConexion.getConexion();
                                if (conexionContpaqi == null) {
                                    JOptionPane.showMessageDialog(this, "Error al realizar la conexionContpaqi a la base de datos\n"
                                            + "Por favor verifique que sea un archivo valido o no este dañado", "Error de conexionContpaqi", JOptionPane.ERROR_MESSAGE);
                                    jtxtExaminarCOI.requestFocus();
                                    jLblSAE.setText("Error al establecer la conexión");
                                    conexionContpaqi = null;
                                    validarAccesosTrue();
                                } else {
                                    jLblSAE.setText("Conexión realizada con exito");
                                    jLblSAE.setForeground(new Color(0, 0, 204));
                                    validarAccesos();
                                    if (conexionContpaqi != null) {
                                        conexionContpaqi.close();
                                    }
                                }
                            } catch (Exception e1) {
                                e1.printStackTrace();
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Indique el Puerto a traves del cual se establece la conexión con la base de datos");
                        jtxtrutaOnombreBDCOI.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Indique el nombre de Usuario que inicia la conexión");
                    jtxtrutaOnombreBDCOI.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Indique la ruta de la conexión");
                jtxtrutaOnombreBDCOI.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Indique el nombre o direccion ip del servidor");
            jtxtNomOServCOI.requestFocus();
        }
    }//GEN-LAST:event_jtxtExaminarCOIActionPerformed

    private void jcbcontroladorBDCOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbcontroladorBDCOIActionPerformed

        if (jcbcontroladorBDCOI.getSelectedIndex() == 0) {
            jlblrutaobd.setText("Ruta BD:");
            jtxtUsuarioCOI.setText("SYSDBA");
            jtxtcontraseniaCOI.setText("masterkey");
            jtxtpuertoCOI.setText("3050");
            jtxtExaminarCOI.setVisible(true);
        }
        if (jcbcontroladorBDCOI.getSelectedIndex() == 1) {
            jlblrutaobd.setText("Nombre BD:");
            jtxtExaminarCOI.setVisible(false);
            jtxtUsuarioCOI.setText("sa");
            jtxtpuertoCOI.setText("1433");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jcbcontroladorBDCOIActionPerformed

    private void jtxtUsuarioCOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtUsuarioCOIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtUsuarioCOIActionPerformed

    private void jtxtNomOServCOIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNomOServCOIKeyTyped
        // TODO add your handling code here:
        if (jtxtNomOServCOI.getText().length() > 25) {
            String texto = jtxtNomOServCOI.getText().substring(0, 24);
            jtxtNomOServCOI.select(0, 24);
            jtxtNomOServCOI.setText(texto);
        }
    }//GEN-LAST:event_jtxtNomOServCOIKeyTyped

    private void jcbcontroladorBDContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbcontroladorBDContActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbcontroladorBDContActionPerformed

    private void jtxtPuertoContKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPuertoContKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
        if (jtxtPuertoCont.getText().length() > 9) {
            String texto = jtxtPuertoCont.getText().substring(0, 8);
            jtxtPuertoCont.select(0, 8);
            jtxtPuertoCont.setText(texto);
        }
    }//GEN-LAST:event_jtxtPuertoContKeyTyped

    private void jtxtServidorContKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtServidorContKeyTyped
        // TODO add your handling code here:
        if (jtxtServidorCont.getText().length() > 25) {
            String texto = jtxtServidorCont.getText().substring(0, 24);
            jtxtServidorCont.select(0, 24);
            jtxtServidorCont.setText(texto);
        }
    }//GEN-LAST:event_jtxtServidorContKeyTyped

    private void jCbTipoConexionContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbTipoConexionContActionPerformed
        // TODO add your handling code here:
        if (jCbTipoConexionCont.getSelectedIndex() == 0) {
            if (!ServidorCont.equalsIgnoreCase("")) {
                jtxtServidorCont.setText(ServidorCont);
            } else {
                jtxtServidorCont.setText("");
            }
            jtxtServidorCont.setEditable(true);
        }
        if (jCbTipoConexionCont.getSelectedIndex() == 1) {
            jtxtServidorCont.setEditable(false);
            jtxtServidorCont.setText(obtenerDireccionIPLocal());
        }
    }//GEN-LAST:event_jCbTipoConexionContActionPerformed

    private void jTabbedPane3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane3StateChanged
        // TODO add your handling code here:
        if (jTabbedPane3.getSelectedIndex() == 1) {
            if (!jcbcontroladorBDCOI.getSelectedItem().toString().equals(controladorCOI)
                    || !jCbTipoConexionCOI.getSelectedItem().toString().equals(tipoCCOI)
                    || !jtxtNomOServCOI.getText().equals(ServidorCOI)
                    || !jtxtrutaOnombreBDCOI.getText().equals(RutaonombreBDCOI)) {
                int opcGuardCambios = JOptionPane.showConfirmDialog(this, "Aun no ha guardado cambios \n ¿Desea realizarlo?", "Guardar cambios", JOptionPane.YES_NO_OPTION);
                if (opcGuardCambios == JOptionPane.YES_OPTION) {
                    try {
                        if (probarConexionCOI()) {
                            if (probarConexionCont()) {
                                guardar(false);
                                objConexion = new CrearConexionFBoSQL(jcbcontroladorBDCOI.getSelectedItem().toString(),
                                        jtxtNomOServCOI.getText(), Integer.parseInt(jtxtpuertoCOI.getText().trim()), jtxtrutaOnombreBDCOI.getText(),
                                        jtxtUsuarioCOI.getText(), new String(jtxtcontraseniaCOI.getPassword()),false);
                                conexionCOI = objConexion.getConexion();
                                getInfoEmpreCtas(conexionCOI, jcbcontroladorBDCOI.getSelectedItem().toString());
//                                JOptionPane.showMessageDialog(this, "La conexiónes se realizaron correctamente", "Exito en las conexiiones", JOptionPane.INFORMATION_MESSAGE);
                                jBtnAceptar.setEnabled(true);
                            } else {
                                JOptionPane.showMessageDialog(this, "Error al realizar la conexion a la base de datos  de CONTPAQ i\n"
                                        + "Por favor verifique los parametros de la configuración", "Error de conexión", JOptionPane.ERROR_MESSAGE);
                                jTabbedPane1.setSelectedIndex(0);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Error al realizar la conexion  a la base de datos de ASPEL COI\n"
                                    + "Por favor verifique los parametros de la configuración", "Error de conexión", JOptionPane.ERROR_MESSAGE);
                            jTabbedPane1.setSelectedIndex(1);
                            jTabbedPane3.setSelectedIndex(0);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }//GEN-LAST:event_jTabbedPane3StateChanged

    private void jtxtNoEmpresaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtNoEmpresaFocusLost
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jtxtNoEmpresaFocusLost

    public void validarNumCaracteres(java.awt.event.KeyEvent evt, Component caja) {
        try {
            char car = evt.getKeyChar();
            if ((car < '0' || car > '9')) {
                evt.consume();
            }
            JTextField jcaja = (JTextField) caja;
            if (jcaja.getText().length() >= 2) {
                evt.consume();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public boolean probarConexionCont() {
        boolean correcto = false;
        try {
            if (!jtxtServidorCont.getText().trim().equalsIgnoreCase("")) {
                if (!jtxtBaseDatosCont.getText().trim().equalsIgnoreCase("")) {
                    objConexion = new CrearConexionFBoSQL(jcbcontroladorBDCont.getSelectedItem().toString(),
                            jtxtServidorCont.getText(), Integer.parseInt(jtxtPuertoCont.getText().trim()), jtxtBaseDatosCont.getText(),
                            jtxtUsuarioCont.getText(), new String(jtxtContraseniaCont.getPassword()),chkSecurityIntegrada.isSelected());
                    conexionContpaqi = objConexion.getConexion();
                    if (conexionContpaqi == null) {
                        conexionContpaqi = null;
                        correcto = false;
                        conexionContpaqi.close();
                    } else {
                        conexionContpaqi.close();
                        correcto = true;
                    }
                } else {
                    correcto = false;
                }
            } else {
                correcto = false;
            }
        } catch (Exception e) {
            e.printStackTrace();
            correcto = false;
        }
        return correcto;
    }

    public boolean probarConexionCOI() {
        boolean correcto = false;
        try {
            if (!jtxtNomOServCOI.getText().trim().equalsIgnoreCase("")) {
                if (!jtxtrutaOnombreBDCOI.getText().trim().equalsIgnoreCase("")) {
                    objConexion = new CrearConexionFBoSQL(jcbcontroladorBDCOI.getSelectedItem().toString(),
                            jtxtNomOServCOI.getText(), Integer.parseInt(jtxtpuertoCOI.getText().trim()), jtxtrutaOnombreBDCOI.getText(),
                            jtxtUsuarioCOI.getText(), new String(jtxtcontraseniaCOI.getPassword()),false);
                    conexionCOI = objConexion.getConexion();
                    if (conexionCOI == null) {
                        conexionContpaqi = null;
                        correcto = false;
                        conexionCOI.close();
                    } else {
                        conexionCOI.close();
                        correcto = true;
                    }
                } else {
                    correcto = false;
                }
            } else {
                correcto = false;
            }
        } catch (Exception e) {
            e.printStackTrace();
            correcto = false;
        }
        return correcto;
    }

    public void salirFin() {
        try {
            if (conexionContpaqi != null) {
                conexionContpaqi.close();
            }
            padre.jMIConfParams.setEnabled(true);
            padre.jbtnImportarCtaCuentas.setEnabled(true);
            padre.jMIReporte.setEnabled(true);
            padre.banderaReportes = false;
            padre.leerConfiguracion();
            this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkSecurityIntegrada;
    private javax.swing.JButton jBtnAceptar;
    private javax.swing.JButton jBtnCancelar;
    protected javax.swing.JComboBox jCbTipoConexionCOI;
    protected javax.swing.JComboBox jCbTipoConexionCont;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblSAE;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbtnProbarconexion;
    private javax.swing.JComboBox jcbcontroladorBDCOI;
    private javax.swing.JComboBox jcbcontroladorBDCont;
    private javax.swing.JLabel jlblrutaobd;
    public javax.swing.JTextField jtxtBaseDatosCont;
    private javax.swing.JPasswordField jtxtContraseniaCont;
    private javax.swing.JButton jtxtExaminarCOI;
    private javax.swing.JTextField jtxtNoEmpresa;
    protected javax.swing.JTextField jtxtNomOServCOI;
    private javax.swing.JTextField jtxtPuertoCont;
    protected javax.swing.JTextField jtxtServidorCont;
    private javax.swing.JTextField jtxtUsuarioCOI;
    private javax.swing.JTextField jtxtUsuarioCont;
    private javax.swing.JPasswordField jtxtcontraseniaCOI;
    private javax.swing.JTextField jtxtpuertoCOI;
    public javax.swing.JTextField jtxtrutaOnombreBDCOI;
    private javax.swing.JTextField txtn1;
    private javax.swing.JTextField txtn2;
    private javax.swing.JTextField txtn3;
    private javax.swing.JTextField txtn4;
    private javax.swing.JTextField txtn5;
    private javax.swing.JTextField txtn6;
    private javax.swing.JTextField txtn7;
    private javax.swing.JTextField txtn8;
    private javax.swing.JTextField txtn9;
    // End of variables declaration//GEN-END:variables
}
